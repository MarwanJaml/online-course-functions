name: Build and deploy Azure Functions

on:
  push:
    branches: [ main ]

env:
  AZURE_FUNCTIONAPP_NAME: 'smartlearnbykarthik-functions'
  AZURE_FUNCTIONAPP_PACKAGE_PATH: './published'
  CONFIGURATION: 'Release'
  DOTNET_VERSION: '8.0.x'
  WORKING_DIRECTORY: '.'

jobs:
  build:
    runs-on: windows-latest
    steps:
    - uses: actions/checkout@v4

    - name: Setup .NET 8
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: ${{ env.DOTNET_VERSION }}

    - name: Restore dependencies
      run: dotnet restore "${{ env.WORKING_DIRECTORY }}" --force-evaluate

    - name: Build solution
      run: |
        dotnet build "${{ env.WORKING_DIRECTORY }}" `
        --configuration ${{ env.CONFIGURATION }} `
        --no-restore `
        --output "${{ env.AZURE_FUNCTIONAPP_PACKAGE_PATH }}"

    - name: Publish application
      run: |
        dotnet publish "${{ env.WORKING_DIRECTORY }}" `
        --configuration ${{ env.CONFIGURATION }} `
        --output "${{ env.AZURE_FUNCTIONAPP_PACKAGE_PATH }}" `
        -p:GenerateFunctionsJsonMetadata=true `
        -p:GenerateRuntimeConfigurationFiles=true `
        -p:DeployOnBuild=true `
        --no-build

    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: function-app
        path: ${{ env.AZURE_FUNCTIONAPP_PACKAGE_PATH }}

  deploy:
    needs: build
    runs-on: windows-latest
    steps:
    - name: Download artifacts
      uses: actions/download-artifact@v4
      with:
        name: function-app
        path: ${{ env.AZURE_FUNCTIONAPP_PACKAGE_PATH }}

    - name: Login to Azure
      uses: azure/login@v2
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}

    - name: Deploy to Azure Functions
      uses: Azure/functions-action@v1
      with:
        app-name: ${{ env.AZURE_FUNCTIONAPP_NAME }}
        package: ${{ env.AZURE_FUNCTIONAPP_PACKAGE_PATH }}
        publish-profile: ${{ secrets.AZURE_FUNCTIONAPP_PUBLISH_PROFILE }}
        scm-do-build-during-deployment: false
        enable-oryx-build: false